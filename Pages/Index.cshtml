@page
@using Assistant.Pages.Shared
@model Assistant.Pages.IndexModel
@{
    ViewData["Title"] = "Clients";
}

@{
    Func<dynamic, Microsoft.AspNetCore.Html.IHtmlContent> indexHeaderRight = @<text>
        @await Html.PartialAsync("_SearchInput", new SearchInputModel
        {
            Id = "clientFilter",
            Name = "clientFilter",
            Placeholder = "Поиск клиентов...",
            WidthClasses = "w-full md:w-[260px]",
            Label = "Поиск клиентов"
        })
        <a asp-page="/Clients/Create" class="btn-primary">
            Создать клиента
        </a>
    </text>;
}
@await Html.PartialAsync("_AuroraHeader", new AuroraHeaderModel
{
    Title = "Мои клиенты",
    HeadingTag = "h3",
    ThemeClass = "aurora-green-indigo",
    ContentClasses = "relative flex flex-col gap-3 md:flex-row md:items-center md:justify-between",
    TitleCssClass = "text-3xl md:text-4xl text-white tracking-tight drop-shadow-[0_6px_18px_rgba(99,102,241,0.25)]",
    RightContent = indexHeaderRight,
    RightContainerClasses = "flex items-center gap-3 w-full md:w-auto"
})
@if (User.IsInRole("assistant-admin"))
{
    <div class="kc-card mb-5 p-5 text-sm text-slate-300/90">
        Используйте пункт «Поиск клиентов» в панели слева, чтобы найти клиентов во всех реалмах.
    </div>
}
<div id="clientsContainer">
    @await Html.PartialAsync("_ClientsList", Model)
</div>

<script data-soft-nav>
    (() => {
        const input = document.getElementById('clientFilter');
        const container = document.getElementById('clientsContainer');
        if (!input || !container) return;

        const applyFilter = () => {
            const q = input.value.trim().toLowerCase();
            const cards = container.querySelectorAll('.client-card');
            cards.forEach(c => {
                const hay = (c.dataset.search || '').toLowerCase();
                const match = !q || hay.includes(q);
                c.classList.toggle('hidden', !match);
            });
        };

        input.addEventListener('input', applyFilter);
        applyFilter();
    })();
</script>

@section Toasts {
    @if (TempData["FlashOk"] is string flash)
    {
        @await Html.PartialAsync("_FlashToast", new FlashToastModel
        {
            Type = FlashToastType.Success,
            MessageHtml = Html.Raw(flash),
            Id = "flashToast"
        })
    }
}
