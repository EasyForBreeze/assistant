@model Assistant.Pages.ClientsPageModel

@{
    var currentPage = (ViewContext.RouteData.Values["page"] as string) ?? string.Empty;
    var returnUrl = string.IsNullOrEmpty(currentPage)
        ? null
        : Url.Page(currentPage, new { q = Model.Q, pageNumber = Model.PageNumber });
}

@if (!Model.Clients.Any() && Model.ShowEmptyMessage)
{
    <div class="kc-card p-10 text-center relative overflow-hidden">
        <div class="empty-card__halo" aria-hidden="true"></div>
        <div class="inline-flex h-12 w-12 items-center justify-center rounded-full bg-emerald-500/20 text-emerald-200 mx-auto mb-3">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="9" />
                <path d="M9 12l2 2 4-4" />
            </svg>
        </div>
        <div class="text-slate-200 text-lg font-semibold mb-1">Клиенты не найдены</div>
        <div class="text-slate-400 text-sm">Попробуйте изменить фильтры или создать нового клиента.</div>
    </div>
}
else if (Model.Clients.Any())
{
    <!-- Сетка карточек клиентов -->
    <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
        @foreach (var c in Model.Clients)
        {
            // один раз материализуем, чтобы не итерировать несколько раз
            var envList = Model.Envs(c.Realm).ToList();
            var envCount = envList.Count;
            var displayName = c.DisplayName;
            var subtitle = string.Equals(displayName, c.ClientId, StringComparison.OrdinalIgnoreCase)
                ? $"Realm: {c.Realm}"
                : displayName;

            <a asp-page="/Clients/Details" asp-route-realm="@c.Realm" asp-route-clientId="@c.ClientId"
               asp-route-returnUrl="@returnUrl"
               class="block group client-card"
                data-search="@($"{c.ClientId} {c.Realm} {displayName}")">
                <div class="client-card__frame">
                    @if (envList.Any())
                    {
                        <div class="client-card__stripe">
                            @foreach (var e in envList)
                            {
                                <span class="flex-1 h-full bg-gradient-to-r @Model.EnvBarGradient(e)"></span>
                            }
                        </div>
                    }

                    <div class="client-card__shine" aria-hidden="true"></div>
                    <div class="client-card__content">
                        <div class="flex items-start justify-between gap-2">
                            <div class="client-card__title" title="@c.ClientId">@c.ClientId</div>
                            <span class="client-card__status @(c.Enabled ? "client-card__status--enabled" : "client-card__status--disabled")">
                                @(c.Enabled ? "Enabled" : "Disabled")
                            </span>
                        </div>

                        <div class="client-card__subtitle" title="@subtitle">
                            @subtitle
                        </div>

                        <div class="client-card__chips">
                            @foreach (var e in envList)
                            {
                                <span class="kc-chip">@e</span>
                            }
                        </div>

                        <div class="client-card__meta">
                            <span class="client-card__meta-item">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-3.5 h-3.5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M12 3l7.5 4.33v9.34L12 21l-7.5-4.33V7.33z" />
                                </svg>
                                <span>@c.Realm</span>
                            </span>
                            <span class="client-card__meta-item">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-3.5 h-3.5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M4 7h16" />
                                    <path d="M4 12h10" />
                                    <path d="M4 17h7" />
                                </svg>
                                <span>@envCount окруж.</span>
                            </span>
                        </div>
                    </div>
                </div>
            </a>
        }
    </div>

    @if (Model.TotalPages > 1)
    {
        <div class="flex justify-center mt-6">
            <nav class="flex items-center gap-2">
                @if (Model.HasPreviousPage)
                {
                    <form method="get" asp-page="@currentPage" class="inline-flex" data-soft-transition="#clientsResults">
                        <input type="hidden" name="q" value="@Model.Q" />
                        <input type="hidden" name="pageNumber" value="@(Model.PageNumber - 1)" />
                        <button type="submit" class="btn-subtle">Предыдущая</button>
                    </form>
                }
                <span class="text-sm text-slate-400">Страница @Model.PageNumber of @Model.TotalPages</span>
                @if (Model.HasNextPage)
                {
                    <form method="get" asp-page="@currentPage" class="inline-flex" data-soft-transition="#clientsResults">
                        <input type="hidden" name="q" value="@Model.Q" />
                        <input type="hidden" name="pageNumber" value="@(Model.PageNumber + 1)" />
                        <button type="submit" class="btn-subtle">Следующая</button>
                    </form>
                }
            </nav>
        </div>
    }
}
