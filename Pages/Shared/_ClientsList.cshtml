@model Assistant.Pages.ClientsPageModel

@{
    var currentPage = (ViewContext.RouteData.Values["page"] as string) ?? string.Empty;
    var returnUrl = string.IsNullOrEmpty(currentPage)
        ? null
        : Url.Page(currentPage, new { q = Model.Q, pageNumber = Model.PageNumber });
}

@if (!Model.Clients.Any() && Model.ShowEmptyMessage)
{
    <div class="clients-info clients-info--empty">
        <div class="clients-info__title">Нет клиентов</div>
        <div class="clients-info__subtitle">Попробуйте другой поиск или создайте нового клиента.</div>
    </div>
}
else if (Model.Clients.Any())
{
    <div class="clients-grid">
        @foreach (var c in Model.Clients)
        {
            var envList = Model.Envs(c.Realm).ToList();
            var displayName = c.DisplayName;
            var subtitle = string.Equals(displayName, c.ClientId, StringComparison.OrdinalIgnoreCase)
                ? $"Realm: {c.Realm}"
                : displayName;

            <a asp-page="/Clients/Details" asp-route-realm="@c.Realm" asp-route-clientId="@c.ClientId"
               asp-route-returnUrl="@returnUrl"
               class="client-card group"
               data-search="@($"{c.ClientId} {c.Realm} {displayName}")">
                <div class="client-card__surface">
                    @if (envList.Any())
                    {
                        <div class="client-card__stripe">
                            @foreach (var e in envList)
                            {
                                <span class="client-card__stripe-segment bg-gradient-to-r @Model.EnvBarGradient(e)"></span>
                            }
                        </div>
                    }

                    <div class="client-card__body">
                        <div class="client-card__header">
                            <div class="client-card__title">@c.ClientId</div>
                            <span class="client-card__status @(c.Enabled ? "client-card__status--enabled" : "client-card__status--disabled")">
                                @(c.Enabled ? "Enabled" : "Disabled")
                            </span>
                        </div>

                        <div class="client-card__subtitle">@subtitle</div>

                        <div class="client-card__footer">
                            <div class="client-card__realm">@c.Realm?.ToUpperInvariant()</div>
                            @if (envList.Any())
                            {
                                <div class="client-card__envs">
                                    @foreach (var e in envList)
                                    {
                                        <span class="client-chip">@e</span>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </a>
        }
    </div>

    @if (Model.TotalPages > 1)
    {
        <div class="clients-pagination">
            <nav class="clients-pagination__inner">
                @if (Model.HasPreviousPage)
                {
                    <a asp-page="@currentPage" asp-route-q="@Model.Q" asp-route-pageNumber="@(Model.PageNumber - 1)" class="btn-subtle">Previous</a>
                }
                <span class="clients-pagination__meta">Page @Model.PageNumber of @Model.TotalPages</span>
                @if (Model.HasNextPage)
                {
                    <a asp-page="@currentPage" asp-route-q="@Model.Q" asp-route-pageNumber="@(Model.PageNumber + 1)" class="btn-subtle">Next</a>
                }
            </nav>
        </div>
    }
}
