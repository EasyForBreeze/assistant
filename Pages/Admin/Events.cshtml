@page
@model Assistant.Pages.Admin.EventsModel
@{
    ViewData["Title"] = "События";
}

@await Html.PartialAsync("_AuroraHeader", new AuroraHeaderModel
{
    Title = "События",
    HeadingTag = "h3",
    ThemeClass = "aurora-sky-teal",
    Classes = "p-5 md:p-6 relative overflow-hidden mb-6",
    ContentClasses = "relative flex flex-col gap-4 md:flex-row md:items-center md:justify-between",
    TitleCssClass = "text-3xl md:text-4xl text-white tracking-tight drop-shadow-[0_6px_18px_rgba(59,130,246,0.25)]",
    Subtitle = "Просматривайте журнал действий Assistant и фильтруйте события по типу, пользователю и диапазону дат.",
    SubtitleCssClass = "text-slate-200/80 mt-2 text-sm max-w-2xl"
})

<script data-soft-nav>
    (() => {
        const rows = document.querySelectorAll('[data-event-row]');

        rows.forEach(row => {
            if (row.dataset.bound === 'true') {
                return;
            }

            const detailsRow = row.nextElementSibling;
            if (!detailsRow || !detailsRow.hasAttribute('data-event-details')) {
                return;
            }

            row.dataset.bound = 'true';

            const indicator = row.querySelector('[data-event-indicator]');

            const toggle = () => {
                const shouldExpand = detailsRow.classList.contains('hidden');

                if (shouldExpand) {
                    detailsRow.classList.remove('hidden');
                }
                else {
                    detailsRow.classList.add('hidden');
                }

                const isExpanded = !detailsRow.classList.contains('hidden');
                row.setAttribute('aria-expanded', isExpanded ? 'true' : 'false');
                indicator?.classList.toggle('rotate-180', isExpanded);
            };

            row.addEventListener('click', toggle);
            row.addEventListener('keydown', event => {
                if (event.key === 'Enter' || event.key === ' ') {
                    event.preventDefault();
                    toggle();
                }
            });
        });
    })();
</script>

<section class="kc-card p-5 mb-6">
    <form method="get" class="grid gap-4 md:grid-cols-4" data-soft-transition="#eventsTable">
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Пользователь</label>
            <input name="Username" value="@Model.Username" placeholder="username"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Тип события</label>
            <select name="OperationType" class="kc-input kc-select rounded-xl px-3 py-2 text-sm text-slate-100 focus:outline-none focus:border-white/20">
                <option value="">Все типы</option>
                @foreach (var type in Model.OperationTypes)
                {
                    var selected = string.Equals(Model.OperationType, type, StringComparison.OrdinalIgnoreCase)
                        ? "selected"
                        : null;
                    <option value="@type" selected="@selected">@Model.FormatOperationType(type)</option>
                }
            </select>
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Дата и время (от)</label>
            <input type="datetime-local" name="From" value="@Model.FromInput"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Дата и время (до)</label>
            <input type="datetime-local" name="To" value="@Model.ToInput"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="md:col-span-4 flex flex-wrap gap-2 pt-2">
            <button type="submit" class="btn-subtle">Применить фильтры</button>
            <a asp-page="/Admin/Events" class="btn-subtle">Сбросить</a>
            <span class="text-xs text-slate-400 md:ml-auto self-center">Показано @Model.TotalCount событий</span>
        </div>
    </form>
</section>

<div id="eventsTable" data-soft-root>
    @if (Model.ResultCount == 0)
    {
        <div class="kc-card p-5 text-sm text-slate-400">
            @(Model.HasFilters ? "По заданным параметрам событий не найдено." : "В журнале ещё нет событий.")
        </div>
    }
    else
    {
        <div class="kc-card relative overflow-hidden border border-white/5 bg-slate-950/50 p-0 shadow-[0_32px_80px_-48px_rgba(14,165,233,0.55)]">
            <div class="pointer-events-none absolute -top-24 right-[-10%] h-56 w-56 rounded-full bg-sky-500/40 blur-[120px] opacity-40"></div>
            <div class="pointer-events-none absolute -bottom-28 left-[-12%] h-60 w-60 rounded-full bg-fuchsia-500/40 blur-[120px] opacity-30"></div>
            <div class="relative overflow-x-auto">
                <table class="min-w-full table-fixed divide-y divide-white/5 text-sm leading-6 text-slate-100">
                    <colgroup>
                        <col class="w-[21rem]" />
                        <col class="w-[16rem]" />
                        <col class="w-[18rem]" />
                        <col class="w-[13rem]" />
                        <col class="w-[16rem]" />
                    </colgroup>
                    <thead class="bg-gradient-to-r from-white/[0.05] via-white/[0.03] to-transparent text-[0.65rem] uppercase tracking-[0.25em] text-slate-200/80 backdrop-blur">
                        <tr>
                            <th class="px-6 py-4 text-left font-semibold text-slate-100/90">Дата и время</th>
                            <th class="px-6 py-4 text-left font-semibold text-slate-100/90">Тип</th>
                            <th class="px-6 py-4 text-left font-semibold text-slate-100/90">Пользователь</th>
                            <th class="px-6 py-4 text-left font-semibold text-slate-100/90">Realm</th>
                            <th class="px-6 py-4 text-left font-semibold text-slate-100/90">Target ID</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-white/5">
                        @foreach (var log in Model.Logs)
                        {
                            var detailsId = $"event-details-{log.Id}";
                            var detailsText = string.IsNullOrWhiteSpace(log.Details)
                                ? "Детали отсутствуют."
                                : log.Details;
                            var accent = Model.GetOperationAccentStyles(log.OperationType);
                            var avatarInitials = Model.GetAvatarInitials(log.Username);
                            var avatarAccent = Model.GetAvatarAccentClass(log.Username);
                            var relativeTime = Model.GetRelativeTime(log.CreatedAtUtc);

                            <tr data-event-row tabindex="0" aria-expanded="false" aria-controls="@detailsId"
                                class="group relative cursor-pointer transition duration-200 odd:bg-white/[0.015] even:bg-transparent hover:bg-white/10 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-[-2px] focus-visible:outline-sky-500/80">
                                <td class="px-6 py-4 align-top">
                                    <div class="relative flex gap-5">
                                        <div class="absolute -left-4 top-1 bottom-1 hidden w-1 rounded-full opacity-0 transition duration-200 group-hover:opacity-90 group-focus-visible:opacity-90 sm:block @accent.BarClass"></div>
                                        <div class="flex items-start gap-3">
                                            <div class="flex flex-col gap-1">
                                                <span class="font-semibold text-slate-100">@Model.FormatTimestamp(log.CreatedAtUtc)</span>
                                                <span class="text-xs text-slate-400">@relativeTime</span>
                                            </div>
                                            <svg data-event-indicator class="ml-auto h-3.5 w-3.5 shrink-0 text-slate-400 transition-transform duration-200"
                                                 viewBox="0 0 12 8" fill="none" aria-hidden="true">
                                                <path d="M10.5 1.5 6 6 1.5 1.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                            </svg>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 align-middle">
                                    <div class="flex flex-col gap-2">
                                        <div class="flex items-center gap-3">
                                            <span class="inline-flex items-center gap-2 rounded-full px-3 py-1 text-[0.7rem] font-semibold uppercase tracking-[0.18em] @accent.BadgeClass">
                                                <svg class="h-3.5 w-3.5" viewBox="0 0 20 20" fill="none" aria-hidden="true">
                                                    <path d="M4 10.5 8.5 15 16 6.5" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"></path>
                                                </svg>
                                                @Model.FormatOperationType(log.OperationType)
                                            </span>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 align-middle">
                                    <div class="flex items-center gap-3">
                                        <span class="inline-flex h-10 w-10 items-center justify-center rounded-2xl text-sm font-semibold uppercase tracking-wide text-white transition duration-200 @avatarAccent group-hover:-translate-y-px group-focus-visible:-translate-y-px">@avatarInitials</span>
                                        <span class="font-semibold text-slate-100">@log.Username</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 align-middle">
                                    <span class="inline-flex items-center gap-2 rounded-full border border-sky-500/25 bg-sky-500/15 px-3 py-1 text-[0.7rem] font-semibold uppercase tracking-[0.18em] text-sky-100/90 shadow-[0_14px_32px_-22px_rgba(14,165,233,0.45)] ring-1 ring-inset ring-sky-500/25 transition-colors duration-200">
                                        <svg class="h-3.5 w-3.5 text-sky-200/80" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                                            <path d="M4 6.5a2.5 2.5 0 0 1 2.5-2.5h11A2.5 2.5 0 0 1 20 6.5v11a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 4 17.5v-11Z" stroke="currentColor" stroke-width="1.5" stroke-linejoin="round"></path>
                                            <path d="M8.5 9.5h7M8.5 14.5h4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                        </svg>
                                        <span class="truncate">@log.Realm</span>
                                    </span>
                                </td>
                                <td class="px-6 py-4 align-middle">
                                    <span class="inline-flex max-w-[15rem] items-center gap-2 rounded-full border border-sky-500/25 bg-sky-500/15 px-3 py-1 font-mono tracking-wide text-sky-100/90 shadow-[0_14px_32px_-22px_rgba(14,165,233,0.45)] ring-1 ring-inset ring-sky-500/25 transition-colors duration-200">
                                        <svg class="h-3.5 w-3.5 text-sky-200/80" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                                            <path d="M12 20a8 8 0 1 0-8-8" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                            <path d="M12 8v4l2 2" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                        </svg>
                                        <span class="truncate">@log.TargetId</span>
                                    </span>
                                </td>
                            </tr>
                            <tr data-event-details id="@detailsId" class="hidden bg-white/[0.04]">
                                <td colspan="5" class="px-6 pb-7 pt-0">
                                    <div class="mt-4 rounded-2xl border border-white/10 bg-gradient-to-br from-slate-950/85 via-slate-900/70 to-slate-950/80 px-5 py-5 text-sm text-slate-200 shadow-[0_28px_65px_-45px_rgba(59,130,246,0.85)]">
                                        <div class="flex flex-wrap items-center gap-3 text-[0.65rem] uppercase tracking-[0.3em] text-slate-400">
                                            <span class="inline-flex items-center gap-2 text-slate-300">
                                                <svg class="h-3.5 w-3.5 text-slate-400/80" viewBox="0 0 20 20" fill="none" aria-hidden="true">
                                                    <path d="m4 8 6 6 6-6" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                </svg>
                                                <span>Детали события</span>
                                            </span>
                                            <span class="ml-auto inline-flex items-center gap-2 rounded-full px-3 py-1 text-[0.65rem] font-semibold uppercase tracking-[0.25em] @accent.BadgeClass">
                                                <span class="h-2 w-2 rounded-full @accent.PulseClass"></span>
                                                @Model.FormatOperationType(log.OperationType)
                                            </span>
                                        </div>
                                        <pre class="mt-3 whitespace-pre-wrap break-words rounded-xl bg-black/20 px-4 py-3 font-mono text-[0.8rem] text-slate-200/90 ring-1 ring-inset ring-white/10">@detailsText</pre>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="border-t border-white/10 px-4 py-3 text-xs text-slate-300 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
                <span>
                    @if (Model.TotalCount == 0)
                    {
                        <text>События отсутствуют.</text>
                    }
                    else
                    {
                        <text>Показаны события @Model.DisplayFrom–@Model.DisplayTo из @Model.TotalCount.</text>
                    }
                </span>

                @if (Model.ShowPagination)
                {
                    var routeUsername = Model.Username;
                    var routeOperation = Model.OperationType;
                    var routeFrom = Model.FromInput;
                    var routeTo = Model.ToInput;

                    <nav class="flex flex-wrap items-center gap-1 text-sm">
                        <form method="get" asp-page="/Admin/Events" class="inline-flex" data-soft-transition="#eventsTable">
                            <input type="hidden" name="pageNumber" value="@(Model.HasPreviousPage ? Model.PageNumber - 1 : Model.PageNumber)" />
                            <input type="hidden" name="Username" value="@routeUsername" />
                            <input type="hidden" name="OperationType" value="@routeOperation" />
                            <input type="hidden" name="From" value="@routeFrom" />
                            <input type="hidden" name="To" value="@routeTo" />
                            <button type="submit"
                                    class="px-3 py-1 rounded-lg border border-white/10 transition @(!Model.HasPreviousPage ? "opacity-40 pointer-events-none" : "hover:bg-white/10")"
                                    disabled="@(!Model.HasPreviousPage ? "disabled" : null)">
                                Назад
                            </button>
                        </form>
                        @for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
                        {
                            var isCurrent = pageNumber == Model.PageNumber;
                            var pageClasses = isCurrent
                                ? "bg-sky-500/20 text-sky-200 border border-sky-500/40"
                                : "border border-white/10 hover:bg-white/10";

                            <form method="get" asp-page="/Admin/Events" class="inline-flex" data-soft-transition="#eventsTable">
                                <input type="hidden" name="pageNumber" value="@pageNumber" />
                                <input type="hidden" name="Username" value="@routeUsername" />
                                <input type="hidden" name="OperationType" value="@routeOperation" />
                                <input type="hidden" name="From" value="@routeFrom" />
                                <input type="hidden" name="To" value="@routeTo" />
                                <button type="submit"
                                        class="@($"px-3 py-1 rounded-lg transition {pageClasses}")"
                                        disabled="@(isCurrent ? "disabled" : null)">
                                    @pageNumber
                                </button>
                            </form>
                        }

                        <form method="get" asp-page="/Admin/Events" class="inline-flex" data-soft-transition="#eventsTable">
                            <input type="hidden" name="pageNumber" value="@(Model.HasNextPage ? Model.PageNumber + 1 : Model.PageNumber)" />
                            <input type="hidden" name="Username" value="@routeUsername" />
                            <input type="hidden" name="OperationType" value="@routeOperation" />
                            <input type="hidden" name="From" value="@routeFrom" />
                            <input type="hidden" name="To" value="@routeTo" />
                            <button type="submit"
                                    class="px-3 py-1 rounded-lg border border-white/10 transition @(!Model.HasNextPage ? "opacity-40 pointer-events-none" : "hover:bg-white/10")"
                                    disabled="@(!Model.HasNextPage ? "disabled" : null)">
                                Далее
                            </button>
                        </form>
                    </nav>
                }
            </div>
        </div>
    }
</div>
