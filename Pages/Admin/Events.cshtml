@page
@model Assistant.Pages.Admin.EventsModel
@{
    ViewData["Title"] = "События";
}

<div class="kc-header p-5 md:p-6 relative overflow-hidden mb-6">
    <div class="absolute inset-0 pointer-events-none">
        <div class="glow-blob absolute -top-12 left-8 h-40 w-40 rounded-full blur-[70px] opacity-60"
             style="background: radial-gradient(60% 60% at 50% 50%, rgba(14,165,233,.55), rgba(59,130,246,.35))"></div>
        <div class="glow-blob absolute -bottom-16 right-10 h-44 w-44 rounded-full blur-[80px] opacity-40"
             style="background: radial-gradient(60% 60% at 50% 50%, rgba(45,212,191,.6), rgba(99,102,241,.35))"></div>
    </div>

    <div class="relative flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
        <div>
            <h3 class="text-3xl md:text-4xl text-white tracking-tight drop-shadow-[0_6px_18px_rgba(59,130,246,0.25)]">
                События
            </h3>
            <p class="text-slate-200/80 mt-2 text-sm max-w-2xl">
                Просматривайте журнал действий Assistant и фильтруйте события по типу, пользователю и диапазону дат.
            </p>
        </div>
    </div>
</div>

<section class="kc-card p-5 mb-6">
    <form method="get" class="grid gap-4 md:grid-cols-4" data-soft-transition="#eventsTable">
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Пользователь</label>
            <input name="Username" value="@Model.Username" placeholder="username"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Тип события</label>
            <select name="OperationType" class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 focus:outline-none focus:border-white/20">
                <option value="">Все типы</option>
                @foreach (var type in Model.OperationTypes)
                {
                    var selected = string.Equals(Model.OperationType, type, StringComparison.OrdinalIgnoreCase)
                        ? "selected"
                        : null;
                    <option value="@type" selected="@selected">@Model.FormatOperationType(type)</option>
                }
            </select>
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Дата и время (от)</label>
            <input type="datetime-local" name="From" value="@Model.FromInput"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Дата и время (до)</label>
            <input type="datetime-local" name="To" value="@Model.ToInput"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="md:col-span-4 flex flex-wrap gap-2 pt-2">
            <button type="submit" class="btn-subtle">Применить фильтры</button>
            <a asp-page="/Admin/Events" class="btn-subtle">Сбросить</a>
            <span class="text-xs text-slate-400 md:ml-auto self-center">Показано @Model.TotalCount событий</span>
        </div>
    </form>
</section>

<div id="eventsTable" data-soft-root>
    @if (Model.ResultCount == 0)
    {
        <div class="kc-card p-5 text-sm text-slate-400">
            @(Model.HasFilters ? "По заданным параметрам событий не найдено." : "В журнале ещё нет событий.")
        </div>
    }
    else
    {
        <div class="kc-card p-0 overflow-hidden">
            <div class="overflow-x-auto">
                <table class="kc-data-table text-sm leading-6">
                    <thead class="kc-data-table__head">
                        <tr>
                            <th class="kc-data-table__th">Дата и время</th>
                            <th class="kc-data-table__th">Тип</th>
                            <th class="kc-data-table__th">Пользователь / Realm</th>
                            <th class="kc-data-table__th">Target ID</th>
                            <th class="kc-data-table__th">Детали</th>
                        </tr>
                    </thead>
                    <tbody class="kc-data-table__body">
                        @foreach (var log in Model.Logs)
                        {
                            var hasUsername = !string.IsNullOrWhiteSpace(log.Username);
                            var formattedOperationType = Model.FormatOperationType(log.OperationType);
                            var hasDetails = !string.IsNullOrWhiteSpace(log.Details);
                            var detailText = hasDetails ? log.Details : "Нет данных";
                            var usernameText = hasUsername ? log.Username! : "—";
                            var realmText = string.IsNullOrWhiteSpace(log.Realm) ? "—" : log.Realm;
                            var targetIdText = string.IsNullOrWhiteSpace(log.TargetId) ? "—" : log.TargetId;
                            var initialChar = hasUsername ? char.ToUpperInvariant(usernameText[0]) : '?';
                            var usernameInitial = initialChar.ToString();

                            <tr class="kc-data-table__row">
                                <td class="kc-data-table__cell" data-label="Дата и время">
                                    <span class="kc-cell-primary">@Model.FormatTimestamp(log.CreatedAtUtc)</span>
                                </td>
                                <td class="kc-data-table__cell" data-label="Тип">
                                    <span class="kc-badge">@formattedOperationType</span>
                                </td>
                                <td class="kc-data-table__cell kc-data-table__cell--user" data-label="Пользователь / Realm">
                                    <div class="kc-user">
                                        <span class="kc-user__avatar">@usernameInitial</span>
                                        <div class="kc-user__meta">
                                            <span class="kc-cell-primary">@usernameText</span>
                                            <span class="kc-cell-secondary">@realmText</span>
                                        </div>
                                    </div>
                                </td>
                                <td class="kc-data-table__cell" data-label="Target ID">
                                    <div class="kc-code-bubble">
                                        <span class="kc-code-bubble__label">ID</span>
                                        <span class="kc-code-bubble__value">@targetIdText</span>
                                    </div>
                                </td>
                                <td class="kc-data-table__cell kc-data-table__cell--details" data-label="Детали">
                                    <div class="kc-log-details @(hasDetails ? string.Empty : "is-empty")">@detailText</div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="border-t border-white/10 px-4 py-3 text-xs text-slate-300 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
                <span>
                    @if (Model.TotalCount == 0)
                    {
                        <text>События отсутствуют.</text>
                    }
                    else
                    {
                        <text>Показаны события @Model.DisplayFrom–@Model.DisplayTo из @Model.TotalCount.</text>
                    }
                </span>

                @if (Model.ShowPagination)
                {
                    var routeUsername = Model.Username;
                    var routeOperation = Model.OperationType;
                    var routeFrom = Model.FromInput;
                    var routeTo = Model.ToInput;

                    <nav class="flex flex-wrap items-center gap-1 text-sm">
                        <a asp-page="/Admin/Events"
                           asp-route-pageNumber="@(Model.HasPreviousPage ? Model.PageNumber - 1 : Model.PageNumber)"
                           asp-route-Username="@routeUsername"
                           asp-route-OperationType="@routeOperation"
                           asp-route-From="@routeFrom"
                           asp-route-To="@routeTo"
                           class="px-3 py-1 rounded-lg border border-white/10 transition @(!Model.HasPreviousPage ? "opacity-40 pointer-events-none" : "hover:bg-white/10")">
                            Назад
                        </a>
                        @for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
                        {
                            var isCurrent = pageNumber == Model.PageNumber;
                            var pageClasses = isCurrent
                                ? "bg-sky-500/20 text-sky-200 border border-sky-500/40"
                                : "border border-white/10 hover:bg-white/10";

                            <a asp-page="/Admin/Events"
                               asp-route-pageNumber="@pageNumber"
                               asp-route-Username="@routeUsername"
                               asp-route-OperationType="@routeOperation"
                               asp-route-From="@routeFrom"
                               asp-route-To="@routeTo"
                               class="@($"px-3 py-1 rounded-lg transition {pageClasses}")">
                                @pageNumber
                            </a>
                        }

                        <a asp-page="/Admin/Events"
                           asp-route-pageNumber="@(Model.HasNextPage ? Model.PageNumber + 1 : Model.PageNumber)"
                           asp-route-Username="@routeUsername"
                           asp-route-OperationType="@routeOperation"
                           asp-route-From="@routeFrom"
                           asp-route-To="@routeTo"
                           class="px-3 py-1 rounded-lg border border-white/10 transition @(!Model.HasNextPage ? "opacity-40 pointer-events-none" : "hover:bg-white/10")">
                            Далее
                        </a>
                    </nav>
                }
            </div>
        </div>
    }
</div>
