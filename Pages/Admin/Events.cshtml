@page
@model Assistant.Pages.Admin.EventsModel
@{
    ViewData["Title"] = "События";
}

<div class="kc-header p-5 md:p-6 relative overflow-hidden mb-6">
    <div class="absolute inset-0 pointer-events-none">
        <div class="glow-blob absolute -top-12 left-8 h-40 w-40 rounded-full blur-[70px] opacity-60"
             style="background: radial-gradient(60% 60% at 50% 50%, rgba(14,165,233,.55), rgba(59,130,246,.35))"></div>
        <div class="glow-blob absolute -bottom-16 right-10 h-44 w-44 rounded-full blur-[80px] opacity-40"
             style="background: radial-gradient(60% 60% at 50% 50%, rgba(45,212,191,.6), rgba(99,102,241,.35))"></div>
    </div>

    <div class="relative flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
        <div>
            <h3 class="text-3xl md:text-4xl text-white tracking-tight drop-shadow-[0_6px_18px_rgba(59,130,246,0.25)]">
                События
            </h3>
            <p class="text-slate-200/80 mt-2 text-sm max-w-2xl">
                Просматривайте журнал действий Assistant и фильтруйте события по типу, пользователю и диапазону дат.
            </p>
        </div>
    </div>
</div>

<script data-soft-nav>
    (() => {
        const rows = document.querySelectorAll('[data-event-row]');

        rows.forEach(row => {
            if (row.dataset.bound === 'true') {
                return;
            }

            const detailsRow = row.nextElementSibling;
            if (!detailsRow || !detailsRow.hasAttribute('data-event-details')) {
                return;
            }

            row.dataset.bound = 'true';

            const indicator = row.querySelector('[data-event-indicator]');

            const toggle = () => {
                const shouldExpand = detailsRow.classList.contains('hidden');

                if (shouldExpand) {
                    detailsRow.classList.remove('hidden');
                }
                else {
                    detailsRow.classList.add('hidden');
                }

                const isExpanded = !detailsRow.classList.contains('hidden');
                row.setAttribute('aria-expanded', isExpanded ? 'true' : 'false');
                indicator?.classList.toggle('rotate-180', isExpanded);
            };

            row.addEventListener('click', toggle);
            row.addEventListener('keydown', event => {
                if (event.key === 'Enter' || event.key === ' ') {
                    event.preventDefault();
                    toggle();
                }
            });
        });
    })();
</script>

<section class="kc-card p-5 mb-6">
    <form method="get" class="grid gap-4 md:grid-cols-4" data-soft-transition="#eventsTable">
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Пользователь</label>
            <input name="Username" value="@Model.Username" placeholder="username"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Тип события</label>
            <select name="OperationType" class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 focus:outline-none focus:border-white/20">
                <option value="">Все типы</option>
                @foreach (var type in Model.OperationTypes)
                {
                    var selected = string.Equals(Model.OperationType, type, StringComparison.OrdinalIgnoreCase)
                        ? "selected"
                        : null;
                    <option value="@type" selected="@selected">@Model.FormatOperationType(type)</option>
                }
            </select>
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Дата и время (от)</label>
            <input type="datetime-local" name="From" value="@Model.FromInput"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="flex flex-col gap-1">
            <label class="text-xs uppercase tracking-wide text-slate-400">Дата и время (до)</label>
            <input type="datetime-local" name="To" value="@Model.ToInput"
                   class="rounded-xl bg-white/5 border border-white/10 px-3 py-2 text-sm text-slate-100 placeholder:text-slate-400 focus:outline-none focus:border-white/20" />
        </div>
        <div class="md:col-span-4 flex flex-wrap gap-2 pt-2">
            <button type="submit" class="btn-subtle">Применить фильтры</button>
            <a asp-page="/Admin/Events" class="btn-subtle">Сбросить</a>
            <span class="text-xs text-slate-400 md:ml-auto self-center">Показано @Model.TotalCount событий</span>
        </div>
    </form>
</section>

<div id="eventsTable" data-soft-root>
    @if (Model.ResultCount == 0)
    {
        <div class="kc-card p-5 text-sm text-slate-400">
            @(Model.HasFilters ? "По заданным параметрам событий не найдено." : "В журнале ещё нет событий.")
        </div>
    }
    else
    {
        <div class="kc-card p-0 overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full table-fixed divide-y divide-white/5 text-sm leading-6">
                    <colgroup>
                        <col class="w-56" />
                        <col class="w-44" />
                        <col class="w-60" />
                        <col class="w-48" />
                        <col class="w-56" />
                    </colgroup>
                    <thead class="bg-white/[0.03] text-[0.65rem] uppercase tracking-[0.25em] text-slate-300/80">
                        <tr>
                            <th class="px-6 py-3 text-left font-semibold text-slate-200/90">Дата и время</th>
                            <th class="px-6 py-3 text-left font-semibold text-slate-200/90">Тип</th>
                            <th class="px-6 py-3 text-left font-semibold text-slate-200/90">Пользователь</th>
                            <th class="px-6 py-3 text-left font-semibold text-slate-200/90">Realm</th>
                            <th class="px-6 py-3 text-left font-semibold text-slate-200/90">Target ID</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-white/5">
                        @foreach (var log in Model.Logs)
                        {
                            var detailsId = $"event-details-{log.Id}";
                            var detailsText = string.IsNullOrWhiteSpace(log.Details)
                                ? "Детали отсутствуют."
                                : log.Details;

                            <tr data-event-row tabindex="0" aria-expanded="false" aria-controls="@detailsId"
                                class="group transition-colors duration-150 odd:bg-white/[0.02] even:bg-transparent hover:bg-white/10 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-[-2px] focus-visible:outline-sky-500 cursor-pointer">
                                <td class="px-6 py-3 whitespace-nowrap font-mono text-sm text-slate-200">
                                    <div class="flex items-center justify-between gap-3">
                                        <span>@Model.FormatTimestamp(log.CreatedAtUtc)</span>
                                        <svg data-event-indicator class="h-3.5 w-3.5 shrink-0 text-slate-400 transition-transform duration-150"
                                             viewBox="0 0 12 8" fill="none" aria-hidden="true">
                                            <path d="M10.5 1.5 6 6 1.5 1.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                        </svg>
                                    </div>
                                </td>
                                <td class="px-6 py-3 whitespace-nowrap text-slate-100">@Model.FormatOperationType(log.OperationType)</td>
                                <td class="px-6 py-3 whitespace-nowrap text-slate-100">@log.Username</td>
                                <td class="px-6 py-3 whitespace-nowrap text-slate-100">@log.Realm</td>
                                <td class="px-6 py-3 whitespace-nowrap text-slate-100">@log.TargetId</td>
                            </tr>
                            <tr data-event-details id="@detailsId" class="hidden bg-white/[0.04]">
                                <td colspan="5" class="px-6 pb-6 pt-0">
                                    <div class="mt-3 rounded-xl border border-white/10 bg-slate-900/60 px-4 py-4 text-sm text-slate-200 shadow-inner">
                                        <div class="text-[0.65rem] uppercase tracking-[0.25em] text-slate-400">Детали события</div>
                                        <pre class="mt-3 whitespace-pre-wrap break-words font-mono text-[0.8rem] text-slate-200/90">@detailsText</pre>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="border-t border-white/10 px-4 py-3 text-xs text-slate-300 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
                <span>
                    @if (Model.TotalCount == 0)
                    {
                        <text>События отсутствуют.</text>
                    }
                    else
                    {
                        <text>Показаны события @Model.DisplayFrom–@Model.DisplayTo из @Model.TotalCount.</text>
                    }
                </span>

                @if (Model.ShowPagination)
                {
                    var routeUsername = Model.Username;
                    var routeOperation = Model.OperationType;
                    var routeFrom = Model.FromInput;
                    var routeTo = Model.ToInput;

                    <nav class="flex flex-wrap items-center gap-1 text-sm">
                        <a asp-page="/Admin/Events"
                           asp-route-pageNumber="@(Model.HasPreviousPage ? Model.PageNumber - 1 : Model.PageNumber)"
                           asp-route-Username="@routeUsername"
                           asp-route-OperationType="@routeOperation"
                           asp-route-From="@routeFrom"
                           asp-route-To="@routeTo"
                           class="px-3 py-1 rounded-lg border border-white/10 transition @(!Model.HasPreviousPage ? "opacity-40 pointer-events-none" : "hover:bg-white/10")">
                            Назад
                        </a>
                        @for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
                        {
                            var isCurrent = pageNumber == Model.PageNumber;
                            var pageClasses = isCurrent
                                ? "bg-sky-500/20 text-sky-200 border border-sky-500/40"
                                : "border border-white/10 hover:bg-white/10";

                            <a asp-page="/Admin/Events"
                               asp-route-pageNumber="@pageNumber"
                               asp-route-Username="@routeUsername"
                               asp-route-OperationType="@routeOperation"
                               asp-route-From="@routeFrom"
                               asp-route-To="@routeTo"
                               class="@($"px-3 py-1 rounded-lg transition {pageClasses}")">
                                @pageNumber
                            </a>
                        }

                        <a asp-page="/Admin/Events"
                           asp-route-pageNumber="@(Model.HasNextPage ? Model.PageNumber + 1 : Model.PageNumber)"
                           asp-route-Username="@routeUsername"
                           asp-route-OperationType="@routeOperation"
                           asp-route-From="@routeFrom"
                           asp-route-To="@routeTo"
                           class="px-3 py-1 rounded-lg border border-white/10 transition @(!Model.HasNextPage ? "opacity-40 pointer-events-none" : "hover:bg-white/10")">
                            Далее
                        </a>
                    </nav>
                }
            </div>
        </div>
    }
</div>
