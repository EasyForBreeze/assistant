@page
@using Assistant.Pages.Shared
@model Assistant.Pages.Admin.UserClientsModel
@{
    ViewData["Title"] = "Назначение доступа к клиентам";
}

@await Html.PartialAsync("_AuroraHeader", new AuroraHeaderModel
{
    Title = "Назначение доступа к клиентам",
    HeadingTag = "h3",
    ThemeClass = "aurora-sky-teal",
    ContentClasses = "relative flex flex-col gap-4 md:flex-row md:items-center md:justify-between",
    TitleCssClass = "text-3xl md:text-4xl text-white tracking-tight drop-shadow-[0_6px_18px_rgba(59,130,246,0.25)]",
    Subtitle = "Выберите клиента Keycloak и пользователя домена, чтобы предоставить доступ к карточке клиента в Assistant.",
    SubtitleCssClass = "text-slate-200/80 mt-2 text-sm max-w-2xl"
})

<div class="grid gap-6 lg:grid-cols-2 items-start">
    <section id="clientSearchPanel" class="kc-card p-5" data-soft-transition="#clientSearchPanel,#selectedClientCard,#grantAccessPanel">
        <div class="flex items-center justify-between mb-4">
            <h4 class="text-lg font-semibold text-slate-200">Поиск клиента</h4>
            @if (!string.IsNullOrWhiteSpace(Model.SelectedClientId))
            {
                <span class="text-xs text-slate-400">Выбрано: @Model.SelectedClientId (@Model.SelectedClientRealm)</span>
            }
        </div>

        <form method="get" class="flex flex-col gap-3" data-soft-transition="#clientSearchPanel,#selectedClientCard,#grantAccessPanel">
            @await Html.PartialAsync("_SearchInput", new SearchInputModel
            {
                Name = "clientQuery",
                Value = Model.ClientQuery,
                Placeholder = "Введите clientId",
                MinLength = Model.MinimumQueryLength
            })
            <input type="hidden" name="clientPage" value="1" />
            <input type="hidden" name="userPage" value="@Model.UserPage" />
            <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
            <input type="hidden" name="userQuery" value="@Model.UserQuery" />
            <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
            <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
            <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
            <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
            <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
            <button type="submit" class="btn-subtle self-start">Найти клиента</button>
        </form>

        <div class="mt-4 space-y-3">
            @if (Model.ClientResults.Any())
            {
                foreach (var client in Model.ClientResults)
                {
                    <div class="flex items-center justify-between gap-3 rounded-xl border border-white/5 bg-white/5 px-3 py-3">
                        <div>
                            <div class="text-slate-100 font-medium">@client.ClientId</div>
                            <div class="text-xs text-slate-400 uppercase tracking-wide">Пространство: @client.Realm</div>
                        </div>
                        <form method="get" class="flex items-center gap-2">
                            <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                            <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                            <input type="hidden" name="clientPage" value="@Model.ClientPage" />
                            <input type="hidden" name="userPage" value="@Model.UserPage" />
                            <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
                            <input type="hidden" name="selectedClientId" value="@client.ClientId" />
                            <input type="hidden" name="selectedClientRealm" value="@client.Realm" />
                            <input type="hidden" name="selectedClientName" value="@client.Name" />
                            <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
                            <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
                            <button type="submit" class="btn-subtle whitespace-nowrap">Выбрать</button>
                        </form>
                    </div>
                }

                @if (Model.ClientHasPreviousPage || Model.ClientHasNextPage)
                {
                    <div class="flex items-center justify-between pt-2 text-sm text-slate-400">
                        <div>Страница @Model.ClientPage из @Model.ClientTotalPages</div>
                        <div class="flex items-center gap-2">
                            @if (Model.ClientHasPreviousPage)
                            {
                                <form method="get" class="inline-flex">
                                    <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                                    <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                                    <input type="hidden" name="clientPage" value="@(Model.ClientPage - 1)" />
                                    <input type="hidden" name="userPage" value="@Model.UserPage" />
                                    <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
                                    <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
                                    <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
                                    <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
                                    <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
                                    <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
                                    <button type="submit" class="btn-subtle whitespace-nowrap">← Назад</button>
                                </form>
                            }

                            @if (Model.ClientHasNextPage)
                            {
                                <form method="get" class="inline-flex">
                                    <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                                    <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                                    <input type="hidden" name="clientPage" value="@(Model.ClientPage + 1)" />
                                    <input type="hidden" name="userPage" value="@Model.UserPage" />
                                    <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
                                    <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
                                    <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
                                    <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
                                    <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
                                    <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
                                    <button type="submit" class="btn-subtle whitespace-nowrap">Вперёд →</button>
                                </form>
                            }
                        </div>
                    </div>
                }
            }
            else if (Model.ClientQueryTooShort)
            {
                <div class="text-sm text-slate-400">Введите минимум @Model.MinimumQueryLength символов для поиска.</div>
            }
            else if (!string.IsNullOrWhiteSpace(Model.ClientQuery))
            {
                <div class="text-sm text-slate-400">Клиенты не найдены.</div>
            }
            else
            {
                <div class="text-sm text-slate-400">Введите идентификатор клиента, чтобы увидеть результаты.</div>
            }
        </div>
    </section>

    <section id="userSearchPanel" class="kc-card p-5" data-soft-transition="#userSearchPanel,#selectedUserCard,#grantAccessPanel,#userAssignmentsPanel">
        <div class="flex items-center justify-between mb-4">
            <h4 class="text-lg font-semibold text-slate-200">Поиск пользователя</h4>
            <span class="text-xs text-slate-400">Пространство: @Model.PrimaryRealm</span>
        </div>

        <form method="get" class="flex flex-col gap-3">
            @await Html.PartialAsync("_SearchInput", new SearchInputModel
            {
                Name = "userQuery",
                Value = Model.UserQuery,
                Placeholder = "username, email или ФИО",
                MinLength = Model.MinimumQueryLength
            })
            <input type="hidden" name="userPage" value="1" />
            <input type="hidden" name="clientPage" value="@Model.ClientPage" />
            <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
            <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
            <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
            <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
            <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
            <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
            <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
            <button type="submit" class="btn-subtle self-start">Найти пользователя</button>
        </form>

        <div class="mt-4 space-y-3">
            @if (Model.UserResults.Any())
            {
                foreach (var user in Model.UserResults)
                {
                    <div class="flex items-center justify-between gap-3 rounded-xl border border-white/5 bg-white/5 px-3 py-3">
                        <div>
                            <div class="text-slate-100 font-medium">@user.Username</div>
                            <div class="text-xs text-slate-400">@user.DisplayName</div>
                        </div>
                        <form method="get" class="flex items-center gap-2">
                            <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                            <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                            <input type="hidden" name="clientPage" value="@Model.ClientPage" />
                            <input type="hidden" name="userPage" value="@Model.UserPage" />
                            <input type="hidden" name="assignmentPage" value="1" />
                            <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
                            <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
                            <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
                            <input type="hidden" name="selectedUsername" value="@user.Username" />
                            <input type="hidden" name="selectedUserDisplay" value="@user.DisplayName" />
                            <button type="submit" class="btn-subtle whitespace-nowrap">Выбрать</button>
                        </form>
                    </div>
                }

                @if (Model.UserHasPreviousPage || Model.UserHasNextPage)
                {
                    <div class="flex items-center justify-between pt-2 text-sm text-slate-400">
                        <div>Страница @Model.UserPage из @Model.UserTotalPages</div>
                        <div class="flex items-center gap-2">
                            @if (Model.UserHasPreviousPage)
                            {
                                <form method="get" class="inline-flex">
                                    <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                                    <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                                    <input type="hidden" name="clientPage" value="@Model.ClientPage" />
                                    <input type="hidden" name="userPage" value="@(Model.UserPage - 1)" />
                                    <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
                                    <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
                                    <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
                                    <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
                                    <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
                                    <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
                                    <button type="submit" class="btn-subtle whitespace-nowrap">← Назад</button>
                                </form>
                            }

                            @if (Model.UserHasNextPage)
                            {
                                <form method="get" class="inline-flex">
                                    <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                                    <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                                    <input type="hidden" name="clientPage" value="@Model.ClientPage" />
                                    <input type="hidden" name="userPage" value="@(Model.UserPage + 1)" />
                                    <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
                                    <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
                                    <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
                                    <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
                                    <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
                                    <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
                                    <button type="submit" class="btn-subtle whitespace-nowrap">Вперёд →</button>
                                </form>
                            }
                        </div>
                    </div>
                }
            }
            else if (Model.UserQueryTooShort)
            {
                <div class="text-sm text-slate-400">Введите минимум @Model.MinimumQueryLength символов для поиска.</div>
            }
            else if (!string.IsNullOrWhiteSpace(Model.UserQuery))
            {
                <div class="text-sm text-slate-400">Пользователи не найдены.</div>
            }
            else
            {
                <div class="text-sm text-slate-400">Введите имя пользователя или email для поиска.</div>
            }
        </div>
    </section>
</div>

@if (Model.HasClientSelection || Model.HasUserSelection)
{
    <div class="grid gap-6 mt-6 lg:grid-cols-2" id="selectionSummary">
        @if (Model.HasClientSelection)
        {
            <div class="kc-card p-5" id="selectedClientCard">
                <h4 class="text-lg font-semibold text-slate-200 mb-3">Выбранный клиент</h4>
                <div class="rounded-xl border border-white/5 bg-white/5 px-4 py-3">
                    <div class="text-slate-100 font-medium text-lg">@Model.SelectedClientId</div>
                    <div class="text-xs text-slate-400 uppercase tracking-wide">Пространство: @Model.SelectedClientRealm</div>
                </div>
            </div>
        }

        @if (Model.HasUserSelection)
        {
            <div class="kc-card p-5" id="selectedUserCard">
                <h4 class="text-lg font-semibold text-slate-200 mb-3">Выбранный пользователь</h4>
                <div class="rounded-xl border border-white/5 bg-white/5 px-4 py-3">
                    <div class="text-slate-100 font-medium text-lg">@Model.SelectedUsername</div>
                    <div class="text-xs text-slate-400">@Model.SelectedUserDisplay</div>
                </div>
            </div>
        }
    </div>
}

@if (Model.CanGrant)
{
    <div id="grantAccessPanel" class="kc-card p-5 mt-6" data-soft-transition="#grantAccessPanel,#userAssignmentsPanel">
        <h4 class="text-lg font-semibold text-slate-200">Предоставить доступ</h4>
        <p class="text-sm text-slate-400 mt-2">
            Клиент <span class="text-slate-200 font-medium">@Model.SelectedClientId</span> из пространтсва
            <span class="text-slate-200 font-medium">@Model.SelectedClientRealm</span> будет доступен пользователю
            <span class="text-slate-200 font-medium">@Model.SelectedUsername</span>.
        </p>

        <form method="post" asp-page-handler="Grant" class="mt-4 flex flex-wrap items-center gap-3">
            <input type="hidden" name="realm" value="@Model.SelectedClientRealm" />
            <input type="hidden" name="clientId" value="@Model.SelectedClientId" />
            <input type="hidden" name="clientName" value="@Model.SelectedClientName" />
            <input type="hidden" name="username" value="@Model.SelectedUsername" />
            <input type="hidden" name="userDisplay" value="@Model.SelectedUserDisplay" />
            <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
            <input type="hidden" name="userQuery" value="@Model.UserQuery" />
            <input type="hidden" name="clientPage" value="@Model.ClientPage" />
            <input type="hidden" name="userPage" value="@Model.UserPage" />
            <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
            <button type="submit" class="btn-primary">Назначить доступ</button>
        </form>
    </div>
}

@if (Model.HasUserSelection)
{
    <div id="userAssignmentsPanel" class="kc-card p-5 mt-6" data-soft-transition="#userAssignmentsPanel">
        <div class="flex items-center justify-between mb-4">
            <h4 class="text-lg font-semibold text-slate-200">Клиенты пользователя @Model.SelectedUsername</h4>
            <span class="text-xs text-slate-400">Всего: @Model.Assignments.Count</span>
        </div>

        @if (Model.Assignments.Any())
        {
            <div class="space-y-3">
                @foreach (var client in Model.AssignmentPageItems)
                {
                    <div class="flex items-center justify-between gap-3 rounded-xl border border-white/5 bg-white/5 px-3 py-3">
                        <div>
                            <div class="text-slate-100 font-medium">@client.ClientId</div>
                            <div class="text-xs text-slate-400 uppercase tracking-wide">Realm: @client.Realm</div>
                        </div>
                        <form method="post" asp-page-handler="Revoke" class="flex items-center gap-2">
                            <input type="hidden" name="realm" value="@client.Realm" />
                            <input type="hidden" name="clientId" value="@client.ClientId" />
                            <input type="hidden" name="username" value="@Model.SelectedUsername" />
                            <input type="hidden" name="userDisplay" value="@Model.SelectedUserDisplay" />
                            <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                            <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                            <input type="hidden" name="clientPage" value="@Model.ClientPage" />
                            <input type="hidden" name="userPage" value="@Model.UserPage" />
                            <input type="hidden" name="assignmentPage" value="@Model.AssignmentPage" />
                            <button type="submit" class="btn-danger whitespace-nowrap">Удалить</button>
                        </form>
                    </div>
                }
            </div>

            @if (Model.AssignmentHasPreviousPage || Model.AssignmentHasNextPage)
            {
                <div class="flex items-center justify-between pt-2 text-sm text-slate-400">
                    <div>Страница @Model.AssignmentPage из @Model.AssignmentTotalPages</div>
                    <div class="flex items-center gap-2">
                        @if (Model.AssignmentHasPreviousPage)
                        {
                            <form method="get" class="inline-flex">
                                <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                                <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                                <input type="hidden" name="clientPage" value="@Model.ClientPage" />
                                <input type="hidden" name="userPage" value="@Model.UserPage" />
                                <input type="hidden" name="assignmentPage" value="@(Model.AssignmentPage - 1)" />
                                <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
                                <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
                                <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
                                <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
                                <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
                                <button type="submit" class="btn-subtle whitespace-nowrap">← Назад</button>
                            </form>
                        }

                        @if (Model.AssignmentHasNextPage)
                        {
                            <form method="get" class="inline-flex">
                                <input type="hidden" name="clientQuery" value="@Model.ClientQuery" />
                                <input type="hidden" name="userQuery" value="@Model.UserQuery" />
                                <input type="hidden" name="clientPage" value="@Model.ClientPage" />
                                <input type="hidden" name="userPage" value="@Model.UserPage" />
                                <input type="hidden" name="assignmentPage" value="@(Model.AssignmentPage + 1)" />
                                <input type="hidden" name="selectedClientId" value="@Model.SelectedClientId" />
                                <input type="hidden" name="selectedClientRealm" value="@Model.SelectedClientRealm" />
                                <input type="hidden" name="selectedClientName" value="@Model.SelectedClientName" />
                                <input type="hidden" name="selectedUsername" value="@Model.SelectedUsername" />
                                <input type="hidden" name="selectedUserDisplay" value="@Model.SelectedUserDisplay" />
                                <button type="submit" class="btn-subtle whitespace-nowrap">Вперёд →</button>
                            </form>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-sm text-slate-400">Для выбранного пользователя пока нет назначенных клиентов.</div>
        }
    </div>
}

@section Toasts {
    @if (TempData["FlashOk"] is string ok)
    {
        @await Html.PartialAsync("_FlashToast", new FlashToastModel
        {
            Type = FlashToastType.Success,
            MessageHtml = Html.Raw(ok),
            Id = "flashToastOk"
        })
    }
    @if (TempData["FlashError"] is string err)
    {
        @await Html.PartialAsync("_FlashToast", new FlashToastModel
        {
            Type = FlashToastType.Error,
            Message = err,
            Id = "flashToastError"
        })
    }
}
